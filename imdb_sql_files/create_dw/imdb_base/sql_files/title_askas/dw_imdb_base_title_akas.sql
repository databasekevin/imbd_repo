/* DROP EXISTING DATA WAREHOUSE TABLE	(DW) */
DROP TABLE IF EXISTS DW_IMDB_BASE_TITLE_AKAS;

/* CREATE DW TABLE */
CREATE TABLE DW_IMDB_BASE_TITLE_AKAS (
	TITLE_ID INTEGER NULL
	,TITLE_NK TEXT NOT NULL -- A TCONST, AN ALPHANUMERIC UNIQUE IDENTIFIER OF THE TITLE
	,ORDERING_NK INTEGER NOT NULL -- A NUMBER TO UNIQUELY IDENTIFY ROWS FOR A GIVEN TITLEID
	,TITLE TEXT NOT NULL -- THE LOCALIZED TITLE
	,REGION TEXT NOT NULL -- THE REGION FOR THIS VERSION OF THE TITLE
	,LANGUAGE TEXT NOT NULL -- THE LANGUAGE OF THE TITLE
	,TYPES TEXT NOT NULL -- ENUMERATED SET OF ATTRIBUTES FOR THIS ALTERNATIVE TITLE. ONE OR MORE OF THE FOLLOWING: "ALTERNATIVE", "DVD", "FESTIVAL", "TV", "VIDEO", "WORKING", "ORIGINAL", "IMDBDISPLAY". NEW VALUES MAY BE ADDED IN THE FUTURE WITHOUT WARNING
	,ATTRIBUTES TEXT NOT NULL -- ADDITIONAL TERMS TO DESCRIBE THIS ALTERNATIVE TITLE, NOT ENUMERATED
	,ISORIGINALTITLE INTEGER NOT NULL
	,SRC_ID TEXT NOT NULL
	,LOAD_DATE DATE NOT NULL
	,LAST_UPDATE DATE NOT NULL
	,NOTE TEXT NOT NULL
  ,CREATED_AT TIMESTAMPTZ NOT NULL DEFAULT NOW()
  ,UPDATED_AT TIMESTAMPTZ NOT NULL DEFAULT NOW()
  ,PRIMARY KEY (TITLE_ID)
	);

	CREATE INDEX DW_IMDB_BASE_TITLE_AKAS_INDX ON DW_IMDB_BASE_TITLE_AKAS (TITLE_NK,ORDERING_NK);

	CREATE INDEX DW_IMDB_BASE_TITLE_AKAS_INDX2 ON DW_IMDB_BASE_TITLE_AKAS (LAST_UPDATE);

  CREATE TRIGGER DW_IMDB_BASE_TITLE_AKAS_UPDT
  BEFORE UPDATE ON DW_IMDB_BASE_TITLE_AKAS
  FOR EACH ROW
  EXECUTE PROCEDURE TRIGGER_SET_TIMESTAMP();

/* INSERT DEFAULT VALUES */
INSERT INTO DW_IMDB_BASE_TITLE_AKAS(
	TITLE_ID
	,TITLE_NK
	,ORDERING_NK
	,TITLE
	,REGION
	,LANGUAGE
	,TYPES
	,ATTRIBUTES
	,ISORIGINALTITLE
	,SRC_ID
	,LOAD_DATE
	,LAST_UPDATE
	,NOTE
	)
VALUES (
	0 /* AS TITLE_ID*/
	,'N/A' /* AS TITLE_NK */
	,0 /* AS ORDERING_NK */
	,'N/A' /* AS TITLE */
	,'N/A' /* AS REGION */
	,'N/A' /* AS LANGUAGE */
	,'N/A' /* AS TYPES */
	,'N/A' /* AS ATTRIBUTES */
	,0 /* AS ISORIGINALTITLE */
	,'TITLE_AKAS' /* AS SRC_ID */
	,'19000101' /* AS LOAD_DATE */
	,'19000101' /* AS LAST_UPDATE */
	,'N/A' /* AS NOTE */
	);

COMMIT;
