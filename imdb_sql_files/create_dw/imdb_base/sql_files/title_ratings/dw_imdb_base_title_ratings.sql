/* DROP EXISTING DATA WAREHOUSE TABLE	(DW) */
DROP TABLE IF EXISTS DW_IMDB_BASE_TITLE_RATINGS;

/* CREATE DW TABLE */
CREATE TABLE DW_IMDB_BASE_TITLE_RATINGS (
	P_TCONST_ID INTEGER NULL
	,TCONST_NK TEXT NOT NULL -- ALPHANUMERIC IDENTIFIER OF RATINGS
	,AVERAGERATING FLOAT NOT NULL -- WEIGHTED AVERAGE OF ALL THE INDIVIDUAL USER RATINGS
	,NUMVOTES INT NOT NULL -- NUMBER OF VOTES THE TITLE HAS RECEIVED
	,SRC_ID TEXT NOT NULL
	,LOAD_DATE DATE NOT NULL
	,LAST_UPDATE DATE NOT NULL
	,NOTE TEXT NOT NULL
  ,CREATED_AT TIMESTAMPTZ NOT NULL DEFAULT NOW()
  ,UPDATED_AT TIMESTAMPTZ NOT NULL DEFAULT NOW()
  ,PRIMARY KEY (P_TCONST_ID)
	);

	CREATE INDEX DW_IMDB_BASE_TITLE_RATINGS_INDX ON DW_IMDB_BASE_TITLE_RATINGS (TCONST_NK);

  CREATE TRIGGER DW_IMDB_BASE_TITLE_RATINGS_UPDT
  BEFORE UPDATE ON DW_IMDB_BASE_TITLE_RATINGS
  FOR EACH ROW
  EXECUTE PROCEDURE TRIGGER_SET_TIMESTAMP();

/* INSERT DEFAULT VALUES */
INSERT INTO DW_IMDB_BASE_TITLE_RATINGS(
	P_TCONST_ID
	,TCONST_NK
	,AVERAGERATING
	,NUMVOTES
	,SRC_ID
	,LOAD_DATE
	,LAST_UPDATE
	,NOTE
	)
VALUES (
	0 /* AS P_TCONST_ID */
	,'N/A' /* AS TCONST_NK*/
	,0.0 /* AS AVERAGERATING */
	,0 /* AS NUMVOTES */
	,'TITLE_RATINGS' /* AS SRC_ID */
	,'19000101' /* AS LOAD_DATE */
	,'19000101' /* AS LAST_UPDATE */
	,'N/A' /* AS NOTE */
	);

	COMMIT;
