/* INSERT INTO STAGING TABLE */
TRUNCATE TABLE ST_IMDB_BASE_TITLE_CREW;

INSERT INTO ST_IMDB_BASE_TITLE_CREW (
	TCONST_NK
	,DIRECTORS
	,WRITERS
	,SRC_ID
	,LOAD_DATE
	,NOTE
	)
SELECT TCONST_NK AS TCONST_NK
	,DIRECTORS AS DIRECTORS
	,WRITERS AS WRITERS
	,SRC_ID AS SRC_ID
	,LOAD_DATE AS LOAD_DATE
	,NOTE AS NOTE
FROM SV_IMDB_BASE_TITLE_CREW S
ORDER BY TCONST_NK
	,DIRECTORS;

ANALYZE ST_IMDB_BASE_TITLE_CREW;

/* LOG CREATION STEPS */
TRUNCATE TABLE X_IMDB_BASE_LOG;

INSERT INTO X_IMDB_BASE_LOG (
	LOAD_TIMESTAMP
	,LOAD_SEQ_NUM
	,SRC_ID
	,OBJECT_NAME
	,LOAD_DATE
	,ST_ROW_COUNT
	,DISTINCT_COUNT
	)
SELECT NOW()
	,10
	,S.SRC_ID
	,'ST_IMDB_BASE_TITLE_CREW'
	,MAX(S.LOAD_DATE)
	,SUM(ST_ROW_COUNT)
	,SUM(DISTINCT_COUNT)
FROM (
	SELECT TCONST_NK
		,DIRECTORS
		,SRC_ID
		,MAX(LOAD_DATE) AS LOAD_DATE
		,COUNT(*) AS ST_ROW_COUNT
		,1 AS DISTINCT_COUNT
	FROM ST_IMDB_BASE_TITLE_CREW S
	GROUP BY TCONST_NK
		,DIRECTORS
		,SRC_ID
	) AS S
GROUP BY S.SRC_ID;

/* SAVE LOG HISTORY */
INSERT INTO ETL_LOG (
	SUBJECT_AREA
	,LOAD_TIMESTAMP
	,LOAD_SEQ_NUM
	,SRC_ID
	,OBJECT_NAME
	,LOAD_DATE
	,ST_ROW_COUNT
	,DISTINCT_COUNT
	,FAIL_CHECK_BOOL_1
	,ERROR_MESSAGE_1
	,FAIL_CHECK_BOOL_2
	,ERROR_MESSAGE_2
	,FAIL_CHECK_BOOL_3
	,ERROR_MESSAGE_3
	)
SELECT 'IMDB_BASE'
	,LOAD_TIMESTAMP
	,LOAD_SEQ_NUM
	,SRC_ID
	,OBJECT_NAME
	,LOAD_DATE
	,ST_ROW_COUNT
	,DISTINCT_COUNT
	,CASE
		WHEN COUNT(*) > 0
			THEN 0
		ELSE 1
		END
	,'DATA SOURCE IS EMPTY. (TABLE ST_IMDB_BASE_TITLE_CREW).'
	,CASE
		WHEN SUM(ST_ROW_COUNT) = SUM(DISTINCT_COUNT)
			THEN 0
		ELSE 1
		END
	,'DATA SOURCE FAILED PRIMARY KEY TEST. (TABLE ST_IMDB_BASE_TITLE_CREW).'
	,0
	,'N/A'
FROM X_IMDB_BASE_LOG
GROUP BY LOAD_TIMESTAMP
	,LOAD_SEQ_NUM
	,SRC_ID
	,OBJECT_NAME
	,LOAD_DATE
	,ST_ROW_COUNT
	,DISTINCT_COUNT;

COMMIT;
